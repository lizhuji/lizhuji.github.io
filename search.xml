<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python 笔记</title>
      <link href="/2022/04/04/Python/"/>
      <url>/2022/04/04/Python/</url>
      
        <content type="html"><![CDATA[<p>只是很普通的记录而已<br>对了，我不可能写算法（懒）<br>软件下载<a href="https://www.python.org/">Python官网</a>! Ps：这只是其一</p><h2 id="基本函数"><a href="#基本函数" class="headerlink" title="基本函数"></a>基本函数</h2><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>不多讲，就是让电脑在自己脸上写字</p><p>例：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ print<span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Wow,好神奇是吗（hh）</p><p>这就和c++的cout和printf一样鹅</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Hello World!"</span><span class="token punctuation">;</span>$ printf<span class="token punctuation">(</span><span class="token string">"%d"</span>,<span class="token string">"Hello World!"</span><span class="token punctuation">)</span>//应该是这么写的吧（<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>就是给电脑塞东西</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ input<span class="token punctuation">(</span><span class="token string">"请输入："</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>通常情况下，这可以用变量来保存（基本使用方法）<br>如：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ name <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string">"你的名字:"</span><span class="token punctuation">)</span>$ print<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>有了这种方法，我们可以完成各种套娃（</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ name <span class="token operator">=</span> <span class="token number">1</span>$ a <span class="token operator">=</span> name$ b <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token punctuation">)</span>$ c <span class="token operator">=</span> b$ b <span class="token operator">=</span> a+b+c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>顺带一提，input()里面可加不可加字符串</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ input<span class="token punctuation">(</span><span class="token punctuation">)</span>$ input<span class="token punctuation">(</span><span class="token string">"bulabulabula"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>都是可以的</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>c++教程</title>
      <link href="/2021/11/21/c-%E6%95%99%E7%A8%8B/"/>
      <url>/2021/11/21/c-%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="C-，嗯。。。"><a href="#C-，嗯。。。" class="headerlink" title="C++，嗯。。。"></a>C++，嗯。。。</h2><h3 id="无奈哈哈哈"><a href="#无奈哈哈哈" class="headerlink" title="无奈哈哈哈"></a>无奈哈哈哈</h3><p>我也不想，我也很无奈，但是我还是写了。。。。。<br>那么，开始吧！</p><h2 id="各类基础语法"><a href="#各类基础语法" class="headerlink" title="各类基础语法"></a>各类基础语法</h2><h3 id="if-else-你要钱还是要命"><a href="#if-else-你要钱还是要命" class="headerlink" title="if else    :   你要钱还是要命"></a>if else    :   你要钱还是要命</h3><p>当然要钱喽！<br>但这句话确实很适合形容if和else，一般讲，我们称其为判断语句<br>解释一下，if顾名思义，如果的意思，那么 else 就是：如果不是，那么。。。。<br>用代码解释就是：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ if<span class="token punctuation">(</span><span class="token string">"你要钱"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         那么你就没命   <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>         那么你就没钱   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>很显然，我们看出来了，使用if…..else…..语句来让没脑子的电脑给我们判断一下，就挺。。。。。哈哈哈？<br>（当然了，人家没脑子也算的比你快✧(≖ ◡ ≖✿ ） </p><p>言归正传，我们用if…else…让电脑判断一些东西，当电脑判断完时，电脑会告诉你是对的还是错的，我们把对的叫做 ： True，错的叫做    False</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">1</span> + <span class="token number">1</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> //让电脑判断        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"Yes"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>//如果返回的是正确，那么输出这段代码 <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"No"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>//如果返回的是错误，那么输出这段代码 <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>好了！那么有人会问了，那这else是什么鬼东西？<br>好问题。。。<br>你就把它当做和if相反的东西啦！<br>就比如说 </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token number">1</span>+1 <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>那么相反不就是</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token number">1</span>+1 <span class="token operator">!=</span> <span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(ps:不是吧，不会有人不知道 “!=”是不等于的意思吧？）<br>咳咳，这个相反的语句呢，因为我们太懒了，就拿个else代替了<br>所以 else 就等于 if(1 + 1 != 2)<br>实在不理解，就这样说：<br>如果（1+1 == 2）<br>      那么是对的<br>否则<br>      是错的</p><p>再不理解就只能骂我了。。。。。。</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>OK，布置个回家作业：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token comment">#include &lt;iostream></span>   using namespace std<span class="token punctuation">;</span>   int <span class="token function-name function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        //写入判断语句代码，如果 <span class="token number">1</span>+1<span class="token operator">=</span><span class="token number">12</span>，那么输出 “耶~”，否则输出 “对了”        <span class="token builtin class-name">return</span> <span class="token number">0</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>希望你会（不会有人不会吧？）</p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/11/10/hello-world/"/>
      <url>/2021/11/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
